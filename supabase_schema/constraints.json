[
  {
    "schema": "auth",
    "table": "audit_log_entries",
    "constraint_name": "audit_log_entries_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "flow_state",
    "constraint_name": "flow_state_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "identities",
    "constraint_name": "identities_user_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "identities",
    "constraint_name": "identities_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "identities",
    "constraint_name": "identities_provider_id_provider_unique",
    "constraint_type": "u",
    "definition": "UNIQUE (provider_id, provider)"
  },
  {
    "schema": "auth",
    "table": "instances",
    "constraint_name": "instances_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "mfa_amr_claims",
    "constraint_name": "mfa_amr_claims_session_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "mfa_amr_claims",
    "constraint_name": "amr_id_pk",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "mfa_amr_claims",
    "constraint_name": "mfa_amr_claims_session_id_authentication_method_pkey",
    "constraint_type": "u",
    "definition": "UNIQUE (session_id, authentication_method)"
  },
  {
    "schema": "auth",
    "table": "mfa_challenges",
    "constraint_name": "mfa_challenges_auth_factor_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (factor_id) REFERENCES auth.mfa_factors(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "mfa_challenges",
    "constraint_name": "mfa_challenges_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "mfa_factors",
    "constraint_name": "mfa_factors_user_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "mfa_factors",
    "constraint_name": "mfa_factors_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "mfa_factors",
    "constraint_name": "mfa_factors_last_challenged_at_key",
    "constraint_type": "u",
    "definition": "UNIQUE (last_challenged_at)"
  },
  {
    "schema": "auth",
    "table": "oauth_clients",
    "constraint_name": "oauth_clients_client_name_length",
    "constraint_type": "c",
    "definition": "CHECK (char_length(client_name) <= 1024)"
  },
  {
    "schema": "auth",
    "table": "oauth_clients",
    "constraint_name": "oauth_clients_client_uri_length",
    "constraint_type": "c",
    "definition": "CHECK (char_length(client_uri) <= 2048)"
  },
  {
    "schema": "auth",
    "table": "oauth_clients",
    "constraint_name": "oauth_clients_logo_uri_length",
    "constraint_type": "c",
    "definition": "CHECK (char_length(logo_uri) <= 2048)"
  },
  {
    "schema": "auth",
    "table": "oauth_clients",
    "constraint_name": "oauth_clients_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "oauth_clients",
    "constraint_name": "oauth_clients_client_id_key",
    "constraint_type": "u",
    "definition": "UNIQUE (client_id)"
  },
  {
    "schema": "auth",
    "table": "one_time_tokens",
    "constraint_name": "one_time_tokens_token_hash_check",
    "constraint_type": "c",
    "definition": "CHECK (char_length(token_hash) > 0)"
  },
  {
    "schema": "auth",
    "table": "one_time_tokens",
    "constraint_name": "one_time_tokens_user_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "one_time_tokens",
    "constraint_name": "one_time_tokens_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "refresh_tokens",
    "constraint_name": "refresh_tokens_session_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (session_id) REFERENCES auth.sessions(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "refresh_tokens",
    "constraint_name": "refresh_tokens_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "refresh_tokens",
    "constraint_name": "refresh_tokens_token_unique",
    "constraint_type": "u",
    "definition": "UNIQUE (token)"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "entity_id not empty",
    "constraint_type": "c",
    "definition": "CHECK (char_length(entity_id) > 0)"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "metadata_url not empty",
    "constraint_type": "c",
    "definition": "CHECK (metadata_url = NULL::text OR char_length(metadata_url) > 0)"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "metadata_xml not empty",
    "constraint_type": "c",
    "definition": "CHECK (char_length(metadata_xml) > 0)"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "saml_providers_sso_provider_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "saml_providers_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "saml_providers",
    "constraint_name": "saml_providers_entity_id_key",
    "constraint_type": "u",
    "definition": "UNIQUE (entity_id)"
  },
  {
    "schema": "auth",
    "table": "saml_relay_states",
    "constraint_name": "request_id not empty",
    "constraint_type": "c",
    "definition": "CHECK (char_length(request_id) > 0)"
  },
  {
    "schema": "auth",
    "table": "saml_relay_states",
    "constraint_name": "saml_relay_states_flow_state_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (flow_state_id) REFERENCES auth.flow_state(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "saml_relay_states",
    "constraint_name": "saml_relay_states_sso_provider_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "saml_relay_states",
    "constraint_name": "saml_relay_states_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "schema_migrations",
    "constraint_name": "schema_migrations_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (version)"
  },
  {
    "schema": "auth",
    "table": "sessions",
    "constraint_name": "sessions_user_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "sessions",
    "constraint_name": "sessions_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "sso_domains",
    "constraint_name": "domain not empty",
    "constraint_type": "c",
    "definition": "CHECK (char_length(domain) > 0)"
  },
  {
    "schema": "auth",
    "table": "sso_domains",
    "constraint_name": "sso_domains_sso_provider_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (sso_provider_id) REFERENCES auth.sso_providers(id) ON DELETE CASCADE"
  },
  {
    "schema": "auth",
    "table": "sso_domains",
    "constraint_name": "sso_domains_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "sso_providers",
    "constraint_name": "resource_id not empty",
    "constraint_type": "c",
    "definition": "CHECK (resource_id = NULL::text OR char_length(resource_id) > 0)"
  },
  {
    "schema": "auth",
    "table": "sso_providers",
    "constraint_name": "sso_providers_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "users",
    "constraint_name": "users_email_change_confirm_status_check",
    "constraint_type": "c",
    "definition": "CHECK (email_change_confirm_status >= 0 AND email_change_confirm_status <= 2)"
  },
  {
    "schema": "auth",
    "table": "users",
    "constraint_name": "users_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "auth",
    "table": "users",
    "constraint_name": "users_phone_key",
    "constraint_type": "u",
    "definition": "UNIQUE (phone)"
  },
  {
    "schema": "public",
    "table": "book_loans",
    "constraint_name": "book_loans_status_check",
    "constraint_type": "c",
    "definition": "CHECK (status = ANY (ARRAY['active'::text, 'returned'::text, 'cancelled'::text]))"
  },
  {
    "schema": "public",
    "table": "book_loans",
    "constraint_name": "book_loans_book_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_loans",
    "constraint_name": "book_loans_borrower_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (borrower_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_loans",
    "constraint_name": "book_loans_lender_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (lender_id) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_loans",
    "constraint_name": "book_loans_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "book_requests_status_check",
    "constraint_type": "c",
    "definition": "CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text, 'cancelled'::text]))"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "book_requests_book_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "book_requests_requested_by_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (requested_by) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "book_requests_requested_to_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (requested_to) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "fk_requested_by_profiles",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (requested_by) REFERENCES profiles(id)"
  },
  {
    "schema": "public",
    "table": "book_requests",
    "constraint_name": "book_requests_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "book_reviews",
    "constraint_name": "book_reviews_rating_check",
    "constraint_type": "c",
    "definition": "CHECK (rating >= 1 AND rating <= 5)"
  },
  {
    "schema": "public",
    "table": "book_reviews",
    "constraint_name": "book_reviews_book_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "book_reviews",
    "constraint_name": "book_reviews_reviewer_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (reviewer_id) REFERENCES profiles(id) ON DELETE SET NULL"
  },
  {
    "schema": "public",
    "table": "book_reviews",
    "constraint_name": "book_reviews_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "books",
    "constraint_name": "books_catalog_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (catalog_id) REFERENCES books_catalog(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "books",
    "constraint_name": "books_user_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "books",
    "constraint_name": "books_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "books",
    "constraint_name": "unique_catalog_condition_per_user",
    "constraint_type": "u",
    "definition": "UNIQUE (catalog_id, condition, user_id)"
  },
  {
    "schema": "public",
    "table": "books_catalog",
    "constraint_name": "books_catalog_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "books_catalog",
    "constraint_name": "books_catalog_isbn_key",
    "constraint_type": "u",
    "definition": "UNIQUE (isbn)"
  },
  {
    "schema": "public",
    "table": "profiles",
    "constraint_name": "profiles_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "profiles",
    "constraint_name": "profiles_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "profiles",
    "constraint_name": "profiles_username_key",
    "constraint_type": "u",
    "definition": "UNIQUE (username)"
  },
  {
    "schema": "public",
    "table": "return_requests",
    "constraint_name": "return_requests_status_check",
    "constraint_type": "c",
    "definition": "CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text]))"
  },
  {
    "schema": "public",
    "table": "return_requests",
    "constraint_name": "return_requests_book_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "return_requests",
    "constraint_name": "return_requests_loan_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (loan_id) REFERENCES book_loans(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "return_requests",
    "constraint_name": "return_requests_requested_by_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (requested_by) REFERENCES auth.users(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "return_requests",
    "constraint_name": "return_requests_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "fk_saved_books_book",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "fk_saved_books_catalog",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (catalog_id) REFERENCES books_catalog(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "fk_saved_books_user",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "saved_books_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "unique_user_book",
    "constraint_type": "u",
    "definition": "UNIQUE (user_id, book_id)"
  },
  {
    "schema": "public",
    "table": "saved_books",
    "constraint_name": "unique_user_catalog",
    "constraint_type": "u",
    "definition": "UNIQUE (user_id, catalog_id)"
  },
  {
    "schema": "public",
    "table": "transfers",
    "constraint_name": "transfers_status_check",
    "constraint_type": "c",
    "definition": "CHECK (status = ANY (ARRAY['pending'::text, 'confirmed'::text, 'transferred'::text, 'cancelled'::text]))"
  },
  {
    "schema": "public",
    "table": "transfers",
    "constraint_name": "transfers_book_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE"
  },
  {
    "schema": "public",
    "table": "transfers",
    "constraint_name": "transfers_request_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (request_id) REFERENCES book_requests(id) ON DELETE SET NULL"
  },
  {
    "schema": "public",
    "table": "transfers",
    "constraint_name": "transfers_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "public",
    "table": "transfers",
    "constraint_name": "one_request_per_user_book",
    "constraint_type": "u",
    "definition": "UNIQUE (book_id, from_user, to_user)"
  },
  {
    "schema": "public",
    "table": "user_reviews",
    "constraint_name": "user_reviews_rating_check",
    "constraint_type": "c",
    "definition": "CHECK (rating >= 1 AND rating <= 5)"
  },
  {
    "schema": "public",
    "table": "user_reviews",
    "constraint_name": "user_reviews_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "realtime",
    "table": "messages",
    "constraint_name": "messages_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_17",
    "constraint_name": "messages_2025_09_17_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_18",
    "constraint_name": "messages_2025_09_18_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_19",
    "constraint_name": "messages_2025_09_19_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_20",
    "constraint_name": "messages_2025_09_20_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_21",
    "constraint_name": "messages_2025_09_21_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_22",
    "constraint_name": "messages_2025_09_22_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "messages_2025_09_23",
    "constraint_name": "messages_2025_09_23_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id, inserted_at)"
  },
  {
    "schema": "realtime",
    "table": "schema_migrations",
    "constraint_name": "schema_migrations_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (version)"
  },
  {
    "schema": "realtime",
    "table": "subscription",
    "constraint_name": "pk_subscription",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "buckets",
    "constraint_name": "buckets_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "buckets_analytics",
    "constraint_name": "buckets_analytics_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "migrations",
    "constraint_name": "migrations_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "migrations",
    "constraint_name": "migrations_name_key",
    "constraint_type": "u",
    "definition": "UNIQUE (name)"
  },
  {
    "schema": "storage",
    "table": "objects",
    "constraint_name": "objects_bucketId_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)"
  },
  {
    "schema": "storage",
    "table": "objects",
    "constraint_name": "objects_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "prefixes",
    "constraint_name": "prefixes_bucketId_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)"
  },
  {
    "schema": "storage",
    "table": "prefixes",
    "constraint_name": "prefixes_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (bucket_id, level, name)"
  },
  {
    "schema": "storage",
    "table": "s3_multipart_uploads",
    "constraint_name": "s3_multipart_uploads_bucket_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)"
  },
  {
    "schema": "storage",
    "table": "s3_multipart_uploads",
    "constraint_name": "s3_multipart_uploads_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "storage",
    "table": "s3_multipart_uploads_parts",
    "constraint_name": "s3_multipart_uploads_parts_bucket_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (bucket_id) REFERENCES storage.buckets(id)"
  },
  {
    "schema": "storage",
    "table": "s3_multipart_uploads_parts",
    "constraint_name": "s3_multipart_uploads_parts_upload_id_fkey",
    "constraint_type": "f",
    "definition": "FOREIGN KEY (upload_id) REFERENCES storage.s3_multipart_uploads(id) ON DELETE CASCADE"
  },
  {
    "schema": "storage",
    "table": "s3_multipart_uploads_parts",
    "constraint_name": "s3_multipart_uploads_parts_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  },
  {
    "schema": "vault",
    "table": "secrets",
    "constraint_name": "secrets_pkey",
    "constraint_type": "p",
    "definition": "PRIMARY KEY (id)"
  }
]
